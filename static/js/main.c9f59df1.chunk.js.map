{"version":3,"sources":["1inputData/input.tsx","1inputData/Validator.ts","App.tsx","reportWebVitals.ts","index.tsx","1inputData/input.module.scss","App.module.scss"],"names":["Input","props","useState","value","setValue","error","setError","alertFc","alert","Number","onValidate","name","validate","className","cl","wrapp","type","onChange","e","currentTarget","placeholder","onBlur","errorInput","input","onKeyPress","key","textError","min","max","isFinite","length","minLength","maxLength","nowDate","Date","yearNow","getFullYear","toString","slice","monthCard","yearCard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPASaA,EAAQ,SAACC,GAAsB,IAAD,EACfC,mBAAc,IADC,mBAClCC,EADkC,KAC3BC,EAD2B,OAEfF,mBAAiB,IAFF,mBAElCG,EAFkC,KAE3BC,EAF2B,KAOjCC,EAAU,SAACJ,GACbK,MAAM,GAAD,OAAIC,OAAON,GAAX,2BAGHO,EAAa,WACf,GAAmB,eAAfT,EAAMU,KAAuB,CAC7B,IAAMN,EAAQJ,EAAMW,SAAST,EAAM,EAAE,EAAG,cACxCE,EAAQC,EAASD,GAASE,EAAQJ,GAEtC,GAAmB,SAAfF,EAAMU,KAAiB,CACvB,IAAMN,EAAQJ,EAAMW,SAAST,EAAM,EAAE,EAAG,QACxCE,EAAQC,EAASD,GAASE,EAAQJ,GAEtC,GAAmB,SAAfF,EAAMU,KAAiB,CACvB,IAAMN,EAAQJ,EAAMW,SAAST,EAAM,EAAE,EAAG,QACxCE,EAAQC,EAASD,GAASE,EAAQJ,KAS1C,OACI,sBAAKU,UAAWC,IAAGC,MAAnB,UAEI,uBAAOC,KAAMf,EAAMe,KAAMb,MAAOA,EAAOc,SA/BzB,SAACC,GACnBZ,EAAS,IACTF,EAASc,EAAEC,cAAchB,QA8BdQ,KAAMV,EAAMU,KAAMS,YAAanB,EAAMmB,YACrCC,OAXI,WACfX,KAU+BG,UAAYR,EAAmBS,IAAGQ,WAAdR,IAAGS,MAC3CC,WATY,SAACN,GACX,UAAVA,EAAEO,KAAmBf,OAUpBL,GAAS,sBAAMQ,UAAWC,IAAGY,UAApB,SAAgCrB,QCpCxCO,EAAW,SAACT,EAAYwB,EAAaC,EAAajB,GAC3D,IAAKR,EACD,MAAO,WAGX,IAAK0B,SAAS1B,GACT,MAAO,8BAGZ,GAlBqB,SAACwB,EAAaxB,GACnC,OAAOA,EAAM2B,OAASH,EAiBlBI,CAAUJ,EAAKxB,GACf,MAAM,WAAN,OAAkBwB,EAAlB,uBAGJ,GAzBqB,SAACC,EAAazB,GACnC,OAAOA,GAASA,EAAM2B,OAASF,EAwB5BI,CAAUJ,EAAKzB,GACd,MAAM,WAAN,OAAkByB,EAAlB,uBAGJ,GAAY,SAATjB,EAAiB,CAChB,IAAIsB,EAAU,IAAIC,KACdC,EAAU1B,OAAQwB,EAAQG,cAAeC,WAAWC,MAAM,EAAG,IAC3DC,EAAY9B,OAAON,EAAMmC,MAAM,EAAG,IAClCE,EAAW/B,OAAON,EAAMmC,MAAM,EAAG,IACvC,OAAIC,GAAa,IAAMC,GAAYL,EACxB,GAEA,6BAGf,MAAO,ICxBIM,MAXf,WACI,OACI,sBAAK5B,UAAWC,IAAG2B,IAAnB,UAEI,cAAC,EAAD,CAAOzB,KAAM,SAAUI,YAAa,gEAAeT,KAAM,aAAcC,SAAUA,IACjF,cAAC,EAAD,CAAOI,KAAM,SAAUI,YAAa,8FAAoBT,KAAM,OAAQC,SAAUA,IAChF,cAAC,EAAD,CAAOI,KAAM,SAAUI,YAAa,OAAQT,KAAM,OAAQC,SAAUA,QCGjE8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,WAAa,0BAA0B,UAAY,2B,kBCA/HD,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.c9f59df1.chunk.js","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport cl from './input.module.scss';\r\n\r\ntype inputType = {\r\n    type: any\r\n    name: any\r\n    placeholder: string\r\n    validate:(value:string,min:number,max:number, name: string)=>string\r\n}\r\nexport const Input = (props: inputType) => {\r\n    let [value, setValue] = useState<any>('');\r\n    let [error, setError] = useState<string>('')\r\n    const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const alertFc = (value: string) => {\r\n        alert(`${Number(value)} ok, let's go further`)\r\n\r\n    }\r\n    const onValidate = () =>{\r\n        if (props.name === 'numberCart') {\r\n            const error = props.validate(value,8,8, 'numberCart')\r\n            error ? setError(error) : alertFc(value)\r\n        }\r\n        if (props.name === 'date') {\r\n            const error = props.validate(value,4,4, 'date')\r\n            error ? setError(error) : alertFc(value)\r\n        }\r\n        if (props.name === 'CVV2') {\r\n            const error = props.validate(value,3,3, 'CVV2')\r\n            error ? setError(error) : alertFc(value)\r\n        }\r\n    }\r\n    const handleBlur = () => {\r\n        onValidate()\r\n    }\r\n    const onKeyPressCallback = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n       if( e.key === \"Enter\") { onValidate() }\r\n    }\r\n    return (\r\n        <div className={cl.wrapp}>\r\n            {/*<input type={props.type} value={value} onChange={onChangeValue} autoFocus inputMode={props.mode} name={props.name}/>*/}\r\n            <input type={props.type} value={value} onChange={onChangeValue}\r\n                   name={props.name} placeholder={props.placeholder}\r\n                   onBlur={handleBlur} className={!error ? cl.input : cl.errorInput}\r\n                   onKeyPress={onKeyPressCallback}\r\n            />\r\n           {error && <span className={cl.textError}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","export const maxLength = (max: number, value: string) => {\r\n    return value && value.length > max\r\n}\r\nexport const minLength = (min: number, value: string) => {\r\n    return value.length < min\r\n}\r\n\r\n\r\nexport const isNumber = (value: string) => {\r\n    // return Number(value) !== 'n'\r\n}\r\n\r\nexport const validate = (value: any, min: number, max: number, name: string ) => {\r\n    if (!value) {\r\n        return 'Required'\r\n    }\r\n\r\n    if (!isFinite(value)) {\r\n         return 'ok, try to enter the number'\r\n    }\r\n\r\n    if (minLength(min, value)) {\r\n        return `Must be ${min} characters or more`\r\n    }\r\n\r\n    if(maxLength(max, value)){\r\n        return `Must be ${max} characters or less`\r\n    }\r\n\r\n    if(name === 'date') {\r\n        let nowDate = new Date();\r\n        let yearNow = Number((nowDate.getFullYear()).toString().slice(0, 2));\r\n        const monthCard = Number(value.slice(0, 2))\r\n        const yearCard = Number(value.slice(2, 4))\r\n        if (monthCard <= 31 && yearCard >= yearNow) {\r\n            return ''\r\n        } else {\r\n            return 'maybe your card is expired'\r\n        }\r\n    }\r\n    return ''\r\n}\r\n","import React from 'react';\nimport cl from './App.module.scss';\nimport {Input} from \"./1inputData/input\";\nimport {validate} from \"./1inputData/Validator\";\n\nfunction App() {\n    return (\n        <div className={cl.App}>\n            {/*<Input type={'number'}/>*/}\n            <Input type={'string'} placeholder={'Номер Карты'} name={'numberCart'} validate={validate}/>\n            <Input type={'string'} placeholder={'Действительна До'} name={'date'} validate={validate}/>\n            <Input type={'string'} placeholder={'CVV2'} name={'CVV2'} validate={validate}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapp\":\"input_wrapp__2BED_\",\"input\":\"input_input__3HgGW\",\"errorInput\":\"input_errorInput__2B0eB\",\"textError\":\"input_textError__1b6b4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2hwyg\"};"],"sourceRoot":""}